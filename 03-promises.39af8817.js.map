{"mappings":"YAAaA,SAASC,cAAe,SAArC,IACMC,EAAO,CACXC,aAAcH,SAASC,cAAc,qBACvCG,YAAaJ,SAASC,cAAe,oBACrCI,SAAUL,SAASC,cAAc,sBACjCK,iBAAkBN,SAASC,cAAc,WAGzC,SAASM,EAAcC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGtCJ,EAAQ,CAACH,WAASC,UAGxBG,EAAO,CAACJ,WAASC,S,GAEXP,EAAKC,a,IAKVD,EAAKI,iBAAiBU,iBAAkB,SAExC,SAA+BC,GAC9BA,EAAMC,iBAIR,IAHA,IAAIC,EAAQC,OAAOlB,EAAKC,aAAakB,OAC/BC,EAAYF,OAAOlB,EAAKE,YAAYiB,OACpCE,EAAcH,OAAOlB,EAAKG,SAASgB,OAChCG,EAAE,EAAGA,GAAKD,EAAaC,IAGhCjB,EAAciB,EAAEL,GACbM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAAcI,YAAW,WAAOc,QAAQC,IAAI,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,GAAOA,E,IAGnHqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAAcI,YAAW,WAAKc,QAAQC,IAAI,sBAAqCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,GAAMA,E,IAE/GU,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(`.form`)\nconst refs = {\n  firstDelayEl: document.querySelector('input[name=delay]'),\nstepDelayEl: document.querySelector(`input[name=step]`),\namountEl: document.querySelector('input[name=amount]'),\nbtnCreatePromise: document.querySelector('button'),\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(()=> {\n      const shouldResolve = Math.random() > 0.3;\n\n      if(shouldResolve) {\n      resolve({position,delay})\n      }\n      else {\nreject({position,delay})\n      }\n    },refs.firstDelayEl)\n  })\n\n  return promise\n}\n refs.btnCreatePromise.addEventListener ('click', onCreatePromiseClick)\n\n function onCreatePromiseClick (event) {\n  event.preventDefault();\nlet delay = Number(refs.firstDelayEl.value);\nconst stepDelay = Number(refs.stepDelayEl.value);\nconst amountValue = Number(refs.amountEl.value)\nfor (let i=1; i <= amountValue; i++) {\n  \n\ncreatePromise(i,delay)\n  .then(({ position, delay }) => { setTimeout(() => {console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);},delay)\n    \n  })\n  .catch(({ position, delay }) => { setTimeout(()=>{console.log(`❌ Rejected promise ${position} in ${delay}ms`)},delay)\n });\n  delay += stepDelay\n}\n}"],"names":["document","querySelector","$ce04d3a99e08e73b$var$refs","firstDelayEl","stepDelayEl","amountEl","btnCreatePromise","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","stepDelay","amountValue","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.39af8817.js.map"}